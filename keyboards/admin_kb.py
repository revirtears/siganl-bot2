from aiogram.utils.keyboard import InlineKeyboardBuilder

class AdminReplyKb:
    @staticmethod
    async def admin_panel():
        buttons = [
            # ("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats"),
            ("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", "spam"),
            ("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏", "ref_link"),
            ("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏", "manage_admins"),
            ("üìÇ –í—ã–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "export_user"),
        ]

        builder = InlineKeyboardBuilder()
        
        for text, callback_data in buttons:
            builder.button(text=text, callback_data=callback_data)

        return builder.adjust(1).as_markup()

    @staticmethod
    async def ref_panel():
        buttons = [
            ("–°—Å—ã–ª–∫–∞ –¥–ª—è –±–æ—Ç–∞", "bot_link"),
            ("–°—Å—ã–ª–∫–∞ –¥–ª—è –∫–∞–∑–∏–Ω–æ", "casino_link"),

        ]

        builder = InlineKeyboardBuilder()
        
        for text, callback_data in buttons:
            builder.button(text=text, callback_data=callback_data)

        return builder.adjust(1).as_markup()
    
    @staticmethod
    async def add_link_keyboard(ref_type: str):
        buttons = [
            ("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É", f"add_link:{ref_type}"),
            ("üóë –£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É", f"delete_link:{ref_type}")
        ]

        builder = InlineKeyboardBuilder()
        
        for text, callback_data in buttons:
            builder.button(text=text, callback_data=callback_data)

        return builder.adjust(1).as_markup()
    
    @staticmethod
    async def manage_admins_keyboard():
        buttons = [
            ("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "add_admin"),
            ("üóë –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "delete_admin"),
            ("üîô –ù–∞–∑–∞–¥", "admin_panel")
        ]

        builder = InlineKeyboardBuilder()
        
        for text, callback_data in buttons:
            builder.button(text=text, callback_data=callback_data)

        return builder.adjust(1).as_markup()
